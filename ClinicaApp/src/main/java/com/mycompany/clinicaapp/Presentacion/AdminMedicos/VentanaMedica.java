/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.clinicaapp.Presentacion.AdminMedicos;

import com.mycompany.clinicaapp.LogicaDelNegocio.GestorMedico;
import com.mycompany.clinicaapp.Modelos.Medico;
import com.mycompany.clinicaapp.Utilidades.AdminMedica.ActivadorJtableMedicoBotones;
import com.mycompany.clinicaapp.Utilidades.AdminMedica.EventosParaBotones;
import com.mycompany.clinicaapp.Utilidades.AdminMedica.RenderizadoTablaMedico;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.BorderFactory;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;
import javax.swing.border.TitledBorder;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author johan
 */
public class VentanaMedica extends javax.swing.JPanel {

    /**
     * Creates new form VentanaMedica
     */
    public VentanaMedica() {

        initComponents();
        
        GestorMedico gestor= GestorMedico.getInstancia();
        ArrayList<Medico> medicos = GestorMedico.getInstancia().getListaMedicos();

        DefaultTableModel model= (DefaultTableModel) tablaMedica.getModel();
        model.setRowCount(0);
        for (Medico m: medicos)
        {
            model.addRow(new Object[]{
                m.getNombre(),
                m.getCedula(),
                m.getEspecialidad().getNombre(),
            });
        }
       
        
        
        
        setBorder(BorderFactory.createTitledBorder(
            BorderFactory.createEtchedBorder(), "Administrar médicos",
            TitledBorder.LEFT, TitledBorder.TOP
        ));
        EventosParaBotones evento = new EventosParaBotones() {

            @Override
            public void clickHistorial(int row) {
                {
                    if (tablaMedica.isEditing()) tablaMedica.getCellEditor().stopCellEditing();
                    tablaMedica.setRowSelectionInterval(row, row);
                    String nombre = tablaMedica.getValueAt(row, 0).toString();

                    VentanaHistorialAdmin panel = new VentanaHistorialAdmin();
                    panel.setSize(VentanaMedica.this.getSize());
                    panel.setLocation(0, 0);
                    java.awt.Window window = SwingUtilities.getWindowAncestor(VentanaMedica.this);
                    if (window instanceof JFrame frame) {
                        frame.setTitle("Historial del médico " + nombre);
                        frame.setContentPane(panel);
                        frame.revalidate();
                        frame.repaint();
                    }
                }
            }

            @Override
            public void clickEditar(int row) {
                System.out.println("Editar");

            }

            @Override
            public void clickEliminar(int row) {
                if (tablaMedica.isEditing()) tablaMedica.getCellEditor().stopCellEditing();
                DefaultTableModel model = (DefaultTableModel) tablaMedica.getModel();
                model.removeRow(row);
                GestorMedico.getInstancia().eliminarMedico(row);
                
               
            }
        };

        tablaMedica.getColumnModel().getColumn(3).setCellRenderer(new RenderizadoTablaMedico());
        tablaMedica.getTableHeader().setReorderingAllowed(false);
        tablaMedica.setShowGrid(true);
        tablaMedica.setGridColor(Color.LIGHT_GRAY);
        tablaMedica.getColumnModel().getColumn(3).setCellEditor(new ActivadorJtableMedicoBotones(evento));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaMedica = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        tablaMedica.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Cédula", "Especialidad", "Acción"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaMedica.setRowHeight(35);
        jScrollPane1.setViewportView(tablaMedica);
        if (tablaMedica.getColumnModel().getColumnCount() > 0) {
            tablaMedica.getColumnModel().getColumn(3).setPreferredWidth(80);
        }

        jButton1.setText("Agregar");

        jButton2.setText("Volver");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaMedica;
    // End of variables declaration//GEN-END:variables
}
