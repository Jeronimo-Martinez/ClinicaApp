/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.clinicaapp.Presentacion;

import com.mycompany.clinicaapp.LogicaDelNegocio.GestorCita;
import com.mycompany.clinicaapp.Modelos.Cita;
import com.mycompany.clinicaapp.Utilidades.BotonTablaCita;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author jmart
 */
public class ListaCitasPaciente extends javax.swing.JFrame {

    /**
     * Creates new form ListaCitasPaciente
     * @param citas
     */
    private DefaultTableModel modelotabla;
    private GestorCita gestor;
    public ListaCitasPaciente(List<Cita> citas, GestorCita gestor ) {
        initComponents();
        // Obtener dimensiones de la pantalla
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        
        // Calcular la mitad del ancho y alto
        int width = screenSize.width* 2/3;
        int height = screenSize.height* 2/3;
        
        // Centrar la ventana
        int x = (screenSize.width - width) / 2;
        int y = (screenSize.height - height) / 2;
        
        // Establecer tamaño y posición
        this.setBounds(x, y, width, height);
        this.gestor = gestor;
        configurarTabla();
        cargarCitas(citas);
        tablaCitas.setRowHeight(32);
        
        
        TableColumn colAcciones = tablaCitas.getColumn("Acciones");
        colAcciones.setCellRenderer(new BotonTablaCita(gestor, tablaCitas));
        colAcciones.setCellEditor(new BotonTablaCita(gestor, tablaCitas));

        
        
    }

    private ListaCitasPaciente() {
        initComponents();
    }
    public void refrescarTabla() {
    // Limpia el modelo de la tabla
    DefaultTableModel modelo = (DefaultTableModel) tablaCitas.getModel();
    modelo.setRowCount(0);

    // Vuelve a obtener las citas actualizadas 
    List<Cita> citasActualizadas = gestor.getCitas(); // o el método que uses
    
    // Agrega las filas nuevamente
    for (Cita c : citasActualizadas) {
        modelo.addRow(new Object[]{
            c.getId(),
            c.getFecha().toString(),
            c.getPaciente().getNombre(),
            c.getMedico().getNombre(),
            "Acciones"
        });
    }
        TableColumn colAcciones = tablaCitas.getColumn("Acciones");
        colAcciones.setCellRenderer(new BotonTablaCita(gestor, tablaCitas));
        colAcciones.setCellEditor(new BotonTablaCita(gestor, tablaCitas));
    }

  
    private void configurarTabla(){
        modelotabla = new DefaultTableModel(new Object[]{"ID", "Fecha", "Paciente", "Médico", "Acciones"},0){
            @Override
        public boolean isCellEditable(int fila, int columna) {
            // Evita que el usuario edite las celdas 
            return columna == 4; // solo la columna de botones debe permitir interaccion
        }
        };
        tablaCitas.setModel(modelotabla);

    }
    private void cargarCitas(List<Cita> citas) {
    modelotabla.setRowCount(0); // limpia tabla
    for (Cita c : citas) {
        modelotabla.addRow(new Object[]{
            c.getId(),
            c.getFecha(),
            c.getPaciente().getNombre(),
            c.getMedico().getNombre(),
            "Acciones"
        });
    }
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tablaCitas = new javax.swing.JTable();
        botonVolver = new javax.swing.JButton();
        botonCerrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tablaCitas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tablaCitas);

        botonVolver.setText("Volver");
        botonVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonVolverActionPerformed(evt);
            }
        });

        botonCerrar.setText("Cerrar");
        botonCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCerrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonVolver)
                    .addComponent(botonCerrar))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(botonVolver)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botonCerrar))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonVolverActionPerformed
        VentanaIniciarSesion ventana = new VentanaIniciarSesion();
        ventana.setVisible(true);
        ventana.setLocationRelativeTo(null); 
        this.dispose();
        // TODO : Modificar ventana anterior 
    }//GEN-LAST:event_botonVolverActionPerformed

    private void botonCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCerrarActionPerformed
        System.exit(0);
    }//GEN-LAST:event_botonCerrarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListaCitasPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListaCitasPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListaCitasPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListaCitasPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListaCitasPaciente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonCerrar;
    private javax.swing.JButton botonVolver;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tablaCitas;
    // End of variables declaration//GEN-END:variables
}
